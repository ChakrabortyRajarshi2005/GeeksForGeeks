Search in Rotated Sorted Array
Difficulty: MediumAccuracy: 37.64%Submissions: 243K+Points: 4
Given a sorted and rotated array arr[] of distinct elements, the task is to find the index of a target key. Return -1 if the key is not found.

Examples :

Input: arr[] = [5, 6, 7, 8, 9, 10, 1, 2, 3], key = 3
Output: 8
Explanation: 3 is found at index 8.
Input: arr[] = [3, 5, 1, 2], key = 6
Output: -1
Explanation: There is no element that has value 6.
Input: arr[] = [33, 42, 72, 99], key = 42
Output: 1
Explanation: 42 is found at index 1.
Constraints:
1 ≤ arr.size() ≤ 106
0 ≤ arr[i] ≤ 106
1 ≤ key ≤ 106
class Solution {
    int search(int[] arr, int key) {
        int low = 0, high = arr.length - 1;

        while (low <= high) {
            int midium = low + (high - low) / 2;

            if (arr[midium] == key) return midium;

            if (arr[midium] >= arr[low]) {
                if (key >= arr[low] && key < arr[midium]) high = midium - 1;
                else low = midium + 1;
            } else {
                if (key > arr[midium] && key <= arr[high]) low = midium + 1;
                else high = midium - 1;
            }
        }

        return -1;
    }
}
