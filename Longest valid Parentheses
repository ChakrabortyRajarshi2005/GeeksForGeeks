Longest valid Parentheses
Difficulty: HardAccuracy: 26.13%Submissions: 139K+Points: 8Average Time: 20m
Given a string s consisting of opening and closing parenthesis '(' and ')'. Find the length of the longest valid parenthesis substring.

A parenthesis string is valid if:

For every opening parenthesis, there is a closing parenthesis.
The closing parenthesis must be after its opening parenthesis.
Examples :

Input: s = "((()"
Output: 2
Explanation: The longest valid parenthesis substring is "()".
Input: s = ")()())"
Output: 4
Explanation: The longest valid parenthesis substring is "()()".
Input: s = "())()"
Output: 2
Explanation: The longest valid parenthesis substring is "()".
Constraints:
1 ≤ s.size() ≤ 106  
s consists of '(' and ')' only

Company Tags
class Solution {
    static int maxLength(String s) {
    Stack<Integer> stack = new Stack<>();
      stack.push(-1);
      int max=0;
      for(int i=0;i<s.length();i++){
        Character ch = s.charAt(i);
        if(ch == '('){
            stack.push(i);
        }
        else{
            stack.pop();
            if(stack.isEmpty()){
                stack.push(i);
            }
            max = Math.max(max,i-stack.peek());
        }
      }
    return max;
    }
}
