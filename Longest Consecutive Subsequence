Longest Consecutive Subsequence
Difficulty: MediumAccuracy: 33.0%Submissions: 332K+Points: 4
Given an array arr[] of non-negative integers. Find the length of the longest sub-sequence such that elements in the subsequence are consecutive integers, the consecutive numbers can be in any order.

Examples:

Input: arr[] = [2, 6, 1, 9, 4, 5, 3]
Output: 6
Explanation: The consecutive numbers here are 1, 2, 3, 4, 5, 6. These 6 numbers form the longest consecutive subsquence.
Input: arr[] = [1, 9, 3, 10, 4, 20, 2]
Output: 4
Explanation: 1, 2, 3, 4 is the longest consecutive subsequence.
Input: arr[] = [15, 13, 12, 14, 11, 10, 9]
Output: 7
Explanation: The longest consecutive subsequence is 9, 10, 11, 12, 13, 14, 15, which has a length of 7.
Constraints:
1 <= arr.size() <= 105
0 <= arr[i] <= 105
class Solution { 
    public int longestConsecutive(int[] arr) {
        int len = arr.length;
        int arr_02[] =  new int [1000000];
        int counter = 0;
        int max = -1;
        int answer = Integer.MIN_VALUE;
        
        for(int i=0;i<len;i++){
            arr_02[arr[i]]++;
            max = Math.max(max, arr[i]);
            
        }
        
        for(int i=0;i<=max;i++){
           if(arr_02[i]>=1){
               counter++;
           }else{
               answer = Math.max(answer,counter);
               counter = 0;
           }
            
            answer = Math.max(answer,counter);
        }
        return answer;
    }
}
