Sort 0s, 1s and 2s
Difficulty: EasyAccuracy: 50.58%Submissions: 720K+Points: 2
Given an array arr[] containing only 0s, 1s, and 2s. Sort the array in ascending order.

Examples:

Input: arr[] = [0, 1, 2, 0, 1, 2]
Output: [0, 0, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Input: arr[] = [0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1]
Output: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.
Constraints:
1 <= arr.size() <= 106
0 <= arr[i] <= 2


class Solution {
    public void swaping(int arr[], int i, int j) {
        int k = arr[i];
        arr[i] = arr[j];
        arr[j] = k;
    }
    public void sort012(int[] arr) {
        int length = arr.length;
        int down = 0;
        int upper = length - 1;
        int midium = 0;
        while (midium <= upper) {
            if (arr[midium] == 0) {
                swaping(arr, midium++, down++);
            } else if (arr[midium] == 1) {
                midium++;
            } else {
                swaping(arr, midium, upper--);
            }
        }
    }

   
}
