Stickler Thief
Difficulty: MediumAccuracy: 37.98%Submissions: 244K+Points: 4Average Time: 20m
Stickler the thief wants to loot money from the houses arranged in a line. He cannot loot two consecutive houses and aims to maximize his total loot.
Given an array, arr[] where arr[i] represents the amount of money in the i-th house.
Determine the maximum amount he can loot.

Examples:

Input: arr[] = [6, 5, 5, 7, 4]
Output: 15
Explanation: Maximum amount he can get by looting 1st, 3rd and 5th house. Which is 6 + 5 + 4 = 15.
Input: arr[] = [1, 5, 3]
Output: 5
Explanation: Loot only 2nd house and get maximum amount of 5.
Input: arr[] = [4, 4, 4, 4]
Output: 8
Explanation: The optimal choice is to loot every alternate house. Looting the 1st and 3rd houses, or the 2nd and 4th, both give a maximum total of 4 + 4 = 8.
Constraints:
1 ≤ arr.size() ≤ 105
1 ≤ arr[i] ≤ 104


class Solution {
  public:
    
    int findMaxSum(vector<int>& arr) {
        // code here
        int n = arr.size();
  
        // Create a dp array to store the maximum loot at each house
        vector<int> dp(n+1, 0);
    
        // Base cases
        dp[0] = 0;
        dp[1] = arr[0];
    
        // Fill the dp array using the bottom-up approach
        for (int i = 2; i <= n; i++) 
            dp[i] = max(arr[i - 1] + dp[i - 2], dp[i - 1]);
    
        return dp[n];
    }
};
