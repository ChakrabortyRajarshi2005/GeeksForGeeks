Smallest Positive Missing Number
Difficulty: MediumAccuracy: 25.13%Submissions: 354K+Points: 4
You are given an integer array arr[]. Your task is to find the smallest positive number missing from the array.

Note: Positive number starts from 1. The array can have negative integers too.

Examples:

Input: arr[] = [2, -3, 4, 1, 1, 7]
Output: 3
Explanation: Smallest positive missing number is 3.
Input: arr[] = [5, 3, 2, 5, 1]
Output: 4
Explanation: Smallest positive missing number is 4.
Input: arr[] = [-8, 0, -1, -4, -3]
Output: 1
Explanation: Smallest positive missing number is 1.
Constraints:  
1 <= arr.size() <= 105
-106 <= arr[i] <= 106

Company Tags
class Solution {
    public int segregateArr(int[] arr) {
        int n = arr.length;
        int j = 0, i;
        for (i = 0; i < n; i++) {
            if (arr[i] <= 0) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                j++;
            }
        }
        return j;
    }

    public int findMissingPositive(int[] arr, int st, int end) {
        for (int i = st; i < end; i++) {
            int val = Math.abs(arr[i]) + st - 1;
            if (val < end && arr[val] > 0) {
                arr[val] = -arr[val];
            }
        }

        for (int i = st; i < end; i++) {
            if (arr[i] > 0) {
                return i - st + 1;
            }
        }
        return end - st + 1;
    }
    public int missingNumber(int[] arr) {
        int size = arr.length;
        int shift = segregateArr(arr);
        return findMissingPositive(arr, shift, size);
    }
}
