Longest Palindromic Subsequence
Difficulty: MediumAccuracy: 56.57%Submissions: 101K+Points: 4
Given a string s, return the length of the longest palindromic subsequence.

A subsequence is a sequence that can be derived from the given sequence by deleting some or no elements without changing the order of the remaining elements.

A palindromic sequence is a sequence that reads the same forward and backward.

Examples:

Input: s = "bbabcbcab"
Output: 7
Explanation: Subsequence "babcbab" is the longest subsequence which is also a palindrome.
Input: s = "abcd"
Output: 1
Explanation: "a", "b", "c" and "d" are palindromic and all have a length 1.
Input: s = "agbdba"
Output: 5
Explanation: The longest palindromic subsequence is "abdba", which has a length of 5. The characters in this subsequence are taken from the original string "agbdba", and they maintain the order of the string while forming a palindrome.
Constraints:
1 ≤ s.size() ≤ 1000
The string contains only lowercase letters.
// User function Template for C++

class Solution 
{
  public:
    int longestPalinSubseq(string &s) 
    {
        vector<vector<int>>dp(s.size()+2,vector<int>(s.size()+2,0));
        string tg = s;
        reverse(tg.begin(),tg.end());
        for(int i=1;i<=s.size();i++)
        {
            for(int j=1;j<=s.size();j++)
            {
               if(s[i-1] == tg[j-1])
               {
                  dp[i][j] = max(dp[i][j],1+dp[i-1][j-1]);
               } 
               else
               {
                  dp[i][j] = max(dp[i-1][j],dp[i][j-1]); 
               }
            }
        }
        return dp[s.size()][s.size()];
    }
};
